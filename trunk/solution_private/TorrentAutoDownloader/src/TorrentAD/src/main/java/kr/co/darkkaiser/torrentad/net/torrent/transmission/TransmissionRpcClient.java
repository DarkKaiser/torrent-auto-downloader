package kr.co.darkkaiser.torrentad.net.torrent.transmission;

import java.io.File;

import org.apache.commons.codec.binary.Base64;
import org.apache.http.HttpStatus;
import org.jsoup.Connection;
import org.jsoup.Jsoup;
import org.jsoup.helper.StringUtil;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import kr.co.darkkaiser.torrentad.net.torrent.TorrentClient;
import kr.co.darkkaiser.torrentad.net.torrent.transmission.methodresult.MethodResult;
import kr.co.darkkaiser.torrentad.net.torrent.transmission.methodresult.SessionGetMethodResult;

public class TransmissionRpcClient implements TorrentClient {

	private static final Logger logger = LoggerFactory.getLogger(TransmissionRpcClient.class);

	private static final String USER_AGENT = "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:29.0) Gecko/20100101 Firefox/29.0";

	private Gson gson = new GsonBuilder().create();
	
	private Connection.Response loginConnResponse;
	
	private String sessionId;
	
	private String authorization;
	
	@Override
	public boolean connect(final String url, final String user, final String password) throws Exception {
		if (StringUtil.isBlank(url) == true)
			throw new IllegalArgumentException("host는 빈 문자열을 허용하지 않습니다.");
		if (StringUtil.isBlank(user) == true)
			throw new IllegalArgumentException("user는 빈 문자열을 허용하지 않습니다.");
		if (StringUtil.isBlank(password) == true)
			throw new IllegalArgumentException("password는 빈 문자열을 허용하지 않습니다.");

		disconnect();

		// Authorization 헤더 문자열을 생성한다.
		String authorization = String.format("Basic %s", new String(Base64.encodeBase64(String.format("%s:%s", user, password).getBytes())));

		Connection.Response response = Jsoup.connect(url)
				.userAgent(USER_AGENT)
				.header("Authorization", authorization)
				.requestBody("{\"method\": \"session-get\"}")
				.method(Connection.Method.POST)
				.ignoreHttpErrors(true)
				.ignoreContentType(true)
				.execute();

		int statusCode = response.statusCode();
		if (statusCode == HttpStatus.SC_CONFLICT) {
			String sessionId = response.header("X-Transmission-Session-Id");

			response = Jsoup.connect(url)
					.userAgent(USER_AGENT)
					.header("Authorization", authorization)
					.header("X-Transmission-Session-Id", sessionId)
					.requestBody("{\"method\": \"session-get\"}")
					.method(Connection.Method.POST)
					.ignoreHttpErrors(true)
					.ignoreContentType(true)
					.execute();

			if (response.statusCode() != HttpStatus.SC_OK) {
				logger.error("POST " + url + "(X-Transmission-Session-Id:" + sessionId + ")" + " returned " + response.statusCode() + ": " + response.statusMessage());
				return false;
			}

			String result = response.parse().body().html();
			MethodResult methodResult = gson.fromJson(result, SessionGetMethodResult.class);
			if (methodResult.isResultSuccess() == false) {
				logger.error("토렌트 서버에서 수신된 데이터가 success가 아닙니다.(method:session-get, 수신된 데이터:{})", result);
				return false;
			}

			this.sessionId = sessionId;
			this.authorization = authorization;
			this.loginConnResponse = response;
		} else if (statusCode == HttpStatus.SC_UNAUTHORIZED) {
			logger.error("POST " + url + " returned " + response.statusCode() + ": " + response.statusMessage() + ": 사용자 인증이 실패하였습니다.");
			return false;
		} else {
			logger.error("POST " + url + " returned " + response.statusCode() + ": " + response.statusMessage());
			return false;
		}

		return true;
	}
	
	@Override
	public void disconnect() throws Exception {
		this.sessionId = null;
		this.authorization = null;
		this.loginConnResponse = null;
	}

	@Override
	public boolean isConnected() {
		if (this.loginConnResponse == null || StringUtil.isBlank(this.sessionId) == true || StringUtil.isBlank(this.authorization) == true)
			return false;

		return true;
	}

	@Override
	public boolean addTorrent(File file, boolean paused) throws Exception {
		// @@@@@
		//@@@@@ 토렌트 파일은 정지상태로 올리기
		//transmission rpc
		//https://github.com/stil4m/transmission-rpc-java
		//https://sourceforge.net/projects/transmission-rj/

//		Connection.Response completedCheckResponse = Jsoup.connect("http://darkkaiser.gonetis.com:9091/transmission/rpc")
//				.userAgent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:29.0) Gecko/20100101 Firefox/29.0")
//				.header("Content-Type", "json")
//				.header("X-Transmission-Session-Id", header)
//				.header("Authorization", "Basic ZGFya2thaXNlcjpEcmVhbVdha3VXYWt1Nzg=")
//				.method(Connection.Method.POST)
////				.requestBody(body)
//				.requestBody("{ \"method\":\"torrent-add\", \"arguments\":{\"metainfo\":\"\"}}")
//				.ignoreHttpErrors(true)
//				.ignoreContentType(true)
//				.execute();
//		
//		statusCode = completedCheckResponse.statusCode();
//		System.out.println("### " + statusCode);
//
//		Document completedCheckDoc = completedCheckResponse.parse();
//		String completedCheckOuterHtml = completedCheckDoc.outerHtml();
//		System.out.println(completedCheckOuterHtml);
//		
		return true;
	}

}
